{"version":3,"sources":["context/AuthContext.js","hooks/useAuth.js","Login.js","components/Button.js","components/Contact.js","components/ContactList.js","components/Overlay.js","components/EditForm.js","components/Modal.js","components/SearchBar.js","Contacts.js","context/AuthProvider.js","hooks/useAuthContext.js","components/PrivateRoute.js","App.js","index.js"],"names":["React","createContext","useAuth","useContext","authContext","Login","history","useHistory","auth","useLocation","useState","login","setLogin","password","setPassword","className","action","name","value","onChange","e","target","id","type","placeholder","required","onClick","preventDefault","signin","then","replace","pathname","Button","props","text","Contact","contact","onEdit","onDelete","email","phone","website","ContactList","contacts","length","map","Overlay","isShown","setIsShown","useEffect","EditForm","Modal","setContact","isOpen","setIsOpen","handleEsc","key","onClose","document","body","addEventListener","removeEventListener","ReactDOM","createPortal","title","confirmText","onConfirm","Date","now","cancelText","SearchBar","Contacts","setContacts","filteredContacts","setFilteredContacts","selectedContact","setSelectedContact","searchString","setSearchString","modalsStates","setModalsStates","isLoaded","setLoaded","fetch","response","json","data","catch","err","console","error","filter","search","RegExp","string","contactsCopy","indexOf","AuthProvider","children","user","setUser","Promise","resolve","setTimeout","log","signout","useAuthContext","Provider","PrivateRoute","rest","render","location","to","state","from","App","exact","path","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7e981b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext(null);","import React, { useContext } from \"react\";\r\n\r\nimport authContext from '../context/AuthContext';\r\n\r\nexport default function useAuth () {\r\n    return useContext(authContext);\r\n}","import React, { useState } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport useAuth from \"./hooks/useAuth\";\r\n\r\nexport default function Login () {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let auth = useAuth();\r\n\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    function onSubmit (e) {\r\n        e.preventDefault();\r\n        const formIsValid = formValidation();\r\n        if (formIsValid) {\r\n            // Mock authorization\r\n            // function doLogin () {\r\n            //     auth.signin(() => {\r\n            //         history.replace(from);\r\n            //     });\r\n            // }\r\n            // @todo redirection to \"contacts\"\r\n            // let { from } = location.state || { from: { pathname: \"/\" } };\r\n            auth.signin({login, password})\r\n                .then(() => {\r\n                    history.replace({pathname: \"/contacts\"});\r\n                    // history.replace(from);\r\n                });\r\n        }\r\n    }\r\n\r\n    function onReset () {\r\n        setLogin('');\r\n        setPassword('');\r\n    }\r\n\r\n    function formValidation () {\r\n        return login !== '' && password !== '';\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <h3 className=\"login-text\">Authentication</h3>\r\n            <form action=\"#\">\r\n                <label>\r\n                    <input\r\n                        name=\"login\"\r\n                        value={login}\r\n                        onChange={(e) => setLogin(e.target.value)}\r\n                        id=\"login\"\r\n                        type=\"text\"\r\n                        placeholder=\"Login\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <div className=\"login-controls\">\r\n                    <button\r\n                        name=\"submit\"\r\n                        type=\"submit\"\r\n                        onClick={onSubmit}\r\n                    >\r\n                        submit\r\n                    </button>\r\n                    <button\r\n                        name=\"reset\"\r\n                        type=\"reset\"\r\n                        onClick={onReset}\r\n                    >\r\n                        reset\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Button (props) {\r\n\r\n    return (\r\n        <button onClick={props.onClick}>{props.text}</button>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport Button from \"./Button\";\r\n\r\nexport default function Contact ({ contact, onEdit, onDelete }) {\r\n\r\n    return (\r\n        <div className=\"contact\">\r\n            {contact ? (\r\n                <>\r\n                    <div className=\"contact-info\">\r\n                        <span className=\"contact-info-row\">{contact.name}</span>\r\n                        <span className=\"contact-info-row\">{contact.email}</span>\r\n                        <span className=\"contact-info-row\">{contact.phone}</span>\r\n                        <span className=\"contact-info-row\">{contact.website}</span>\r\n                    </div>\r\n                    <div className=\"contact-controls\">\r\n                        <Button\r\n                            text=\"edit\"\r\n                            onClick={(e) => onEdit(e, contact)}\r\n                        />\r\n                        <Button\r\n                            text=\"delete\"\r\n                            onClick={(e) => onDelete(e, contact)}\r\n                        />\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <div className=\"contact-info\">\r\n                    <span className=\"contact-info-row\">There is no matched entries</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nimport Contact from \"./Contact\";\r\n\r\nexport default function ContactList (props) {\r\n    return (\r\n        <div className=\"contact-list\">\r\n            {props.contacts.length ? (\r\n                props.contacts.map(contact =>\r\n                    <Contact\r\n                        key={contact.id}\r\n                        contact={contact}\r\n                        onEdit={props.onEdit}\r\n                        onDelete={props.onDelete}\r\n                    />)\r\n            ) : (\r\n                <Contact contact={null}/>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Overlay () {\r\n    const [isShown, setIsShown] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsShown(true);\r\n    }, [isShown]);\r\n\r\n    return (\r\n        <div className={isShown ? \"overlay show\" : \"overlay\"} />\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function EditForm ({ contact, onEdit }) {\r\n\r\n    const onChange = (e) => {\r\n        onEdit({\r\n            ...contact,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form id=\"add-contact-form\">\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={contact.name || ''}\r\n                    onChange={onChange}\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={contact.email || ''}\r\n                    onChange={onChange}\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={contact.phone || ''}\r\n                    onChange={onChange}\r\n                    name=\"phone\"\r\n                    placeholder=\"Phone\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={contact.website || ''}\r\n                    onChange={onChange}\r\n                    name=\"website\"\r\n                    placeholder=\"Website\"\r\n                    required\r\n                />\r\n            </label>\r\n        </form>\r\n    );\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Overlay from \"./Overlay\";\r\nimport Button from \"./Button\";\r\nimport EditForm from \"./EditForm\";\r\n\r\nexport default function Modal (props) {\r\n\r\n    const [contact, setContact] = useState({...props.contact});\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsOpen(true);\r\n        function handleEsc (e) {\r\n            if (e.key === 'Escape') {\r\n                props.onClose();\r\n            }\r\n        }\r\n        document.body.addEventListener('keyup', handleEsc);\r\n        return () => {\r\n            document.body.removeEventListener('keyup', handleEsc);\r\n        };\r\n    }, [isOpen, props]);\r\n\r\n    function onEdit (contact) {\r\n        setContact(contact);\r\n    }\r\n\r\n    function onClick () {\r\n        props.onConfirm({...contact, id: contact.id || Date.now()});\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <>\r\n                <div className={props.contact ? \"modal show\" : \"modal confirm-modal show\"}>\r\n                    <h3 className=\"modal-text\">{props.title}</h3>\r\n                    {props.contact &&\r\n                        <EditForm\r\n                            contact={contact}\r\n                            onEdit={onEdit}\r\n                        />\r\n                    }\r\n                    <div className=\"modal-controls\">\r\n                        <Button\r\n                            text={props.confirmText}\r\n                            onClick={props.contact ? onClick : props.onConfirm}\r\n                        />\r\n                        <Button\r\n                            text={props.cancelText}\r\n                            onClick={props.onClose}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Overlay />\r\n            </>,\r\n            document.body\r\n        )\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nexport default function SearchBar (props) {\r\n\r\n    return (\r\n        <label className=\"contacts-search\">\r\n            <input\r\n                name=\"search\"\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Search by name\"\r\n            />\r\n        </label>\r\n    );\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport ContactList from './components/ContactList';\r\nimport Modal from \"./components/Modal\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport Button from \"./components/Button\";\r\n\r\nexport default function Contacts () {\r\n\r\n    const [contacts, setContacts] = useState([]);\r\n    const [filteredContacts, setFilteredContacts] = useState([]);\r\n    const [selectedContact, setSelectedContact] = useState(null);\r\n\r\n    const [searchString, setSearchString] = useState('');\r\n\r\n    const [modalsStates, setModalsStates] = useState({\r\n        'ADD': false,\r\n        'DELETE': false,\r\n        'EDIT': false,\r\n    });\r\n\r\n    // Fetching data\r\n    const [isLoaded, setLoaded] = useState(false);\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setLoaded(true);\r\n                setContacts(data);\r\n            })\r\n            .catch((err) => console.error('Fetch error', err));\r\n    }, [isLoaded]);\r\n\r\n    // Computed filtered contacts list\r\n    useEffect(() => {\r\n        setFilteredContacts(contacts.filter(contact => contact.name.search(new RegExp(searchString, 'gi')) !== -1));\r\n    }, [contacts, searchString]);\r\n\r\n    function onAdd () {\r\n        setModalsStates({...modalsStates, 'ADD': true});\r\n    }\r\n\r\n    function onAddConfirm (contact) {\r\n        setModalsStates({...modalsStates, 'ADD': false});\r\n        const contactsCopy = [contact, ...contacts];\r\n        setContacts(contactsCopy);\r\n    }\r\n\r\n    function onEdit (e, contact) {\r\n        setModalsStates({...modalsStates, 'EDIT': true});\r\n        setSelectedContact(contact);\r\n    }\r\n\r\n    function onEditConfirm (contact) {\r\n        setModalsStates({...modalsStates, 'EDIT': false});\r\n        const contactsCopy = [...contacts];\r\n        contactsCopy[contacts.indexOf(selectedContact)] = contact;\r\n        setContacts(contactsCopy);\r\n    }\r\n\r\n    function onDelete (e, contact) {\r\n        setModalsStates({...modalsStates, 'DELETE': true});\r\n        setSelectedContact(contact);\r\n    }\r\n\r\n    function onDeleteConfirm () {\r\n        setModalsStates({...modalsStates, 'DELETE': false})\r\n        setContacts(contacts.filter(contact => contact !== selectedContact));\r\n    }\r\n\r\n    function onClose () {\r\n        setModalsStates({\r\n            'ADD': false,\r\n            'DELETE': false,\r\n            'EDIT': false,\r\n        });\r\n    }\r\n\r\n    function onSearchChange (string) {\r\n        setSearchString(string);\r\n    }\r\n\r\n    return (\r\n        <div className=\"contacts\">\r\n            <div className=\"contact-list-controls\">\r\n                <SearchBar\r\n                    onChange={onSearchChange}\r\n                />\r\n                <Button\r\n                    text=\"Add contact\"\r\n                    onClick={onAdd}\r\n                />\r\n            </div>\r\n            <ContactList\r\n                contacts={filteredContacts}\r\n                onEdit={onEdit}\r\n                onDelete={onDelete}\r\n            />\r\n            {modalsStates['DELETE'] &&\r\n                <Modal\r\n                    title=\"Are you sure?\"\r\n                    confirmText=\"confirm\"\r\n                    cancelText=\"cancel\"\r\n                    onConfirm={onDeleteConfirm}\r\n                    onClose={onClose}\r\n                />\r\n            }\r\n            {modalsStates['EDIT'] &&\r\n                <Modal\r\n                    title=\"Edit contact\"\r\n                    confirmText=\"edit\"\r\n                    cancelText=\"cancel\"\r\n                    onConfirm={onEditConfirm}\r\n                    onClose={onClose}\r\n                    contact={selectedContact}\r\n                />\r\n            }\r\n            {modalsStates['ADD'] &&\r\n                <Modal\r\n                    title=\"Add new contact\"\r\n                    confirmText=\"add\"\r\n                    cancelText=\"cancel\"\r\n                    onConfirm={onAddConfirm}\r\n                    onClose={onClose}\r\n                    contact={{}}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport useAuthContext from '../hooks/useAuthContext';\r\nimport authContext from '../context/AuthContext';\r\n\r\nexport default function AuthProvider ({ children }) {\r\n    // Context value\r\n    const auth = useAuthContext();\r\n    return (\r\n        // Filling the context\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function useAuthContext () {\r\n    const [user, setUser] = useState(null);\r\n\r\n    function signin (data) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                setUser(data);\r\n                console.log('authorized', data);\r\n                resolve();\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    function signout () {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                setUser(null);\r\n                console.log('unauthorized');\r\n                resolve();\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    return {\r\n        user,\r\n        signin,\r\n        signout\r\n    };\r\n}","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nexport default function PrivateRoute ({ children, ...rest }) {\r\n    let auth = useAuth();\r\n\r\n    console.log(rest, auth, auth.user);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            // @todo read more about \"render props\"\r\n            render={({ location }) =>\r\n                auth.user ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect to={{pathname: \"/\", state: { from: location }}} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./Login\";\nimport Contacts from \"./Contacts\";\n\nimport AuthProvider from \"./context/AuthProvider\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nfunction App () {\n    return (\n        <div className=\"App\">\n            <AuthProvider>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Login />\n                        </Route>\n                        <PrivateRoute path=\"/contacts\">\n                            <Contacts />\n                        </PrivateRoute>\n                    </Switch>\n                </Router>\n            </AuthProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}